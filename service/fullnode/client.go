/*
 * rum
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */
package fullnode

import (
	"net/http"

	"github.com/lixvyang/rum-sdk-go/sdk/apps"
	"github.com/lixvyang/rum-sdk-go/sdk/base"
	"github.com/lixvyang/rum-sdk-go/sdk/chain"
	"github.com/lixvyang/rum-sdk-go/sdk/group"
	"github.com/lixvyang/rum-sdk-go/sdk/groups"
	"github.com/lixvyang/rum-sdk-go/sdk/keystore"
	"github.com/lixvyang/rum-sdk-go/sdk/lightnode"
	"github.com/lixvyang/rum-sdk-go/sdk/manager"
	"github.com/lixvyang/rum-sdk-go/sdk/node"
	"github.com/lixvyang/rum-sdk-go/sdk/tools"
	"github.com/lixvyang/rum-sdk-go/sdk/user"
)

// APIClient manages communication with the rum API v1.0.0
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	AppsApi       *apps.AppsApiService
	ChainApi      *chain.ChainApiService
	GroupApi      *group.GroupApiService
	GroupsApi     *groups.GroupsApiService
	KeystoreApi   *keystore.KeystoreApiService
	LightNodeApi  *lightnode.LightNodeApiService
	ManagementApi *manager.ManagementApiService
	NodeApi       *node.NodeApiService
	ToolsApi      *tools.ToolsApiService
	UserApi       *user.UserApiService
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func New(cfg *base.Configuration) *APIClient {
	if cfg.HTTPClient == nil {
		cfg.HTTPClient = http.DefaultClient
	}

	c := &APIClient{}
	baseCli := base.New(&base.Configuration{
		BasePath: cfg.BasePath,
	})

	c.AppsApi = apps.New(baseCli)
	c.GroupApi = group.New(baseCli)
	c.GroupsApi = groups.New(baseCli)
	c.NodeApi = node.New(baseCli)
	c.ManagementApi = manager.New(baseCli)
	c.ChainApi = chain.New(baseCli)
	c.KeystoreApi = keystore.New(baseCli)
	c.LightNodeApi = lightnode.New(baseCli)
	c.ToolsApi = tools.New(baseCli)
	c.UserApi = user.New(baseCli)

	return c
}
